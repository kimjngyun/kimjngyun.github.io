"use strict";(self.webpackChunktew=self.webpackChunktew||[]).push([[376],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return y}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),i=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},c=function(e){var t=i(e.components);return a.createElement(p.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,p=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=i(n),y=r,d=u["".concat(p,".").concat(y)]||u[y]||m[y]||o;return n?a.createElement(d,s(s({ref:t},c),{},{components:n})):a.createElement(d,s({ref:t},c))}));function y(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,s=new Array(o);s[0]=u;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:r,s[1]=l;for(var i=2;i<o;i++)s[i]=n[i];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},391:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return p},default:function(){return y},frontMatter:function(){return l},metadata:function(){return i},toc:function(){return m}});var a=n(7462),r=n(3366),o=(n(7294),n(3905)),s=["components"],l={title:'The Typescript "as const" trick',description:"\ud0c0\uc785\uc2a4\ud06c\ub9bd\ud2b8\uc758 const assertions\uc5d0 \ub300\ud574\uc11c \uc54c\uc544\ubd05\uc2dc\ub2e4.",authors:["jngyun"],tags:["Typescript"]},p=void 0,i={permalink:"/blog/2022/06/11/typescript-as-const-trick",source:"@site/blog/2022-06-11-typescript-as-const-trick/index.md",title:'The Typescript "as const" trick',description:"\ud0c0\uc785\uc2a4\ud06c\ub9bd\ud2b8\uc758 const assertions\uc5d0 \ub300\ud574\uc11c \uc54c\uc544\ubd05\uc2dc\ub2e4.",date:"2022-06-11T00:00:00.000Z",formattedDate:"June 11, 2022",tags:[{label:"Typescript",permalink:"/blog/tags/typescript"}],readingTime:4.58,truncated:!0,authors:[{name:"Jeongyun Kim",url:"https://github.com/kimjngyun",key:"jngyun"}],frontMatter:{title:'The Typescript "as const" trick',description:"\ud0c0\uc785\uc2a4\ud06c\ub9bd\ud2b8\uc758 const assertions\uc5d0 \ub300\ud574\uc11c \uc54c\uc544\ubd05\uc2dc\ub2e4.",authors:["jngyun"],tags:["Typescript"]},nextItem:{title:"LRU Cache",permalink:"/blog/2022/06/08/lru-cache"}},c={authorsImageUrls:[void 0]},m=[{value:"\ubc30\uc5f4\uc744 <code>as const</code>\uc73c\ub85c \ud558\uba74 \ubb50\uac00 \ub2ec\ub77c\uc9c8\uae4c?",id:"\ubc30\uc5f4\uc744-as-const\uc73c\ub85c-\ud558\uba74-\ubb50\uac00-\ub2ec\ub77c\uc9c8\uae4c",level:3},{value:"The Problem",id:"the-problem",level:3},{value:"Inferred Array Types",id:"inferred-array-types",level:3},{value:"Const Assertion",id:"const-assertion",level:3},{value:"Getting a type from our array",id:"getting-a-type-from-our-array",level:3},{value:"Array of Objects",id:"array-of-objects",level:3},{value:"\uacb0\ub860",id:"\uacb0\ub860",level:3},{value:"\ucc38\uace0",id:"\ucc38\uace0",level:3}],u={toc:m};function y(e){var t=e.components,n=(0,r.Z)(e,s);return(0,o.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"const numbers = [1, 2, 3, 4, 5] as const;\ntype Numbers = typeof numbers[number];\n// type Numbers = 1 | 2 | 3 | 4 | 5\n")),(0,o.kt)("h3",{id:"\ubc30\uc5f4\uc744-as-const\uc73c\ub85c-\ud558\uba74-\ubb50\uac00-\ub2ec\ub77c\uc9c8\uae4c"},"\ubc30\uc5f4\uc744 ",(0,o.kt)("inlineCode",{parentName:"h3"},"as const"),"\uc73c\ub85c \ud558\uba74 \ubb50\uac00 \ub2ec\ub77c\uc9c8\uae4c?"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/type-challenges/type-challenges/blob/main/questions/00018-easy-tuple-length/README.ko.md"},"type-challenges 18"),"\uc744 \ud558\ub358 \uc911 \uad81\uae08\ud55c \uc810\uc774 \uc0dd\uacbc\uc2b5\ub2c8\ub2e4. \ubb38\uc81c\ub294 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4."),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"\ubc30\uc5f4(\ud29c\ud50c)\uc744 \ubc1b\uc544 \uae38\uc774\ub97c \ubc18\ud658\ud558\ub294 \uc81c\ub124\ub9ad ",(0,o.kt)("inlineCode",{parentName:"p"},"Length<T>"),"\ub97c \uad6c\ud604\ud558\uc138\uc694.")),(0,o.kt)("p",null,"\uc800\ub294 \ub2e4\uc74c\uacfc \uac19\uc774 ",(0,o.kt)("inlineCode",{parentName:"p"},"Length<T>"),"\ub97c \uad6c\ud604\ud558\uc600\uc2b5\ub2c8\ub2e4."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},'type Length<T extends { [x: number]: any; readonly length: number }> =\n  T["length"];\n')),(0,o.kt)("p",null,"\uadf8\ub7f0\ub370 \ubc30\uc5f4\uc744 ",(0,o.kt)("inlineCode",{parentName:"p"},"as const"),"\ub85c \ub2e8\uc5b8\ud55c \uacbd\uc6b0\uc5d0\ub9cc \ud14c\uc2a4\ud2b8\ub97c \ud1b5\uacfc\ud569\ub2c8\ub2e4."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},'import type { Equal, Expect } from "@type-challenges/utils";\n\nconst numbersAsConst = [1, 2, 3, 4, 5] as const;\nconst numbers = [1, 2, 3, 4, 5];\n\ntype cases = [\n  Expect<Equal<Length<typeof numbersAsConst>, 5>>,\n  // @ts-expect-error\n  Expect<Equal<Length<typeof numbers>, 5>>\n];\n')),(0,o.kt)("p",null,"tsc\ub294 ",(0,o.kt)("inlineCode",{parentName:"p"},"numbersAsConst"),"\ub294 ",(0,o.kt)("inlineCode",{parentName:"p"},"readonly [1, 2, 3, 4, 5]")," \ub77c\ub294 \ud0c0\uc785\uc73c\ub85c, ",(0,o.kt)("inlineCode",{parentName:"p"},"numbers"),"\ub294 ",(0,o.kt)("inlineCode",{parentName:"p"},"numbers[]"),"\ub85c \uac00\uc9d1\ub2c8\ub2e4. \uc774 \ub458\uc758 \ucc28\uc774\ub294 \ubb34\uc5c7\uc77c\uae4c\uc694?"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"numbersAsConst")," \uc640 \uac19\uc774 \ubc30\uc5f4\uc744 ",(0,o.kt)("inlineCode",{parentName:"p"},"const"),"\ub85c \ub2e8\uc5b8\ud558\uba74 \ud0c0\uc785\uc2a4\ud06c\ub9bd\ud2b8\ub294 \ud574\ub2f9 \ubc30\uc5f4\uc5d0 \ub4e4\uc5b4\uac08 \uc218 \uc788\ub294 \ud56d\ubaa9\uc758 \uc885\ub958\ub97c \uc27d\uac8c \ucd94\ub860\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub610\ud55c \ubaa8\ub4e0 \uac83\ub4e4\uc774 \uc0c1\uc218\uac00 \ub418\uace0 ",(0,o.kt)("em",{parentName:"p"},"readonly")," \ud50c\ub798\uadf8\ub97c \uac00\uc9c0\uac8c \ub429\ub2c8\ub2e4. \uadf8\ub9ac\uace0 \uc6b0\ub9ac\ub294 \ubc30\uc5f4\uc5d0 \ub123\uc740 \uac83\uc744 \uc815\ud655\ud55c \uc21c\uc11c\uc640 \ud0c0\uc785\uc73c\ub85c \ubcfc \uc218 \uc788\uc9c0\uc694."),(0,o.kt)("h3",{id:"the-problem"},"The Problem"),(0,o.kt)("p",null,"\uc774\uac83\uc740 \uc5b8\uc81c \uc720\uc6a9\ud560\uae4c\uc694? \ub2e4\uc74c \uc0c1\ud669\uc744 \ubd05\uc2dc\ub2e4."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"const animals = [\"cat\", \"dog\", \"mouse\"];\n\nfunction getAnimal(name: string) {\n  return animals.find((a) => a === name);\n}\n\n// getAnimal('cat')      // OK\n// getAnimal('dog')      // OK\n// getAnimal('mouse')    // OK\n// getAnimal('elephant') // undefined\n")),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"animals")," \ubc30\uc5f4\uc5d0 \uc788\ub294 \ubb38\uc790\uc5f4\uc744 \uc81c\uc678\ud55c \ub2e4\ub978 \uc785\ub825\uac12\uc744 \uc81c\ud55c\ud558\uace0 \uc2f6\uc2b5\ub2c8\ub2e4. \ub2e4\uc74c\uacfc \uac19\uc774 \ud560 \uc218 \uc788\uaca0\ub124\uc694."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},'const animals = ["cat", "dog", "mouse"];\ntype Animal = "cat" | "dog" | "mouse";\n\nfunction getAnimal(name: Animal) {\n  return animals.find((a) => a === name);\n}\n\n// getAnimal(\'cat\')      // OK\n// getAnimal(\'dog\')      // OK\n// getAnimal(\'mouse\')    // OK\n// getAnimal(\'elephant\') // \'"elephant"\' \ud615\uc2dd\uc758 \uc778\uc218\ub294 \'Animal\' \ud615\uc2dd\uc758 \ub9e4\uac1c \ubcc0\uc218\uc5d0 \ud560\ub2f9\ub420 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4.\n')),(0,o.kt)("p",null,"\uadf8\ub7f0\ub370 \uc6b0\ub9ac\uac00 \uc6d0\ud558\ub294 \uac83\uc740 ",(0,o.kt)("inlineCode",{parentName:"p"},"animals")," \ubc30\uc5f4\uc758 \uac12\ub4e4\uc744 \uc77c\uc77c\ud788 \uc720\ub2c8\uc628 \ud0c0\uc785\uc73c\ub85c \ubcf5\uc81c\ud558\ub294 \uac83\uc774 \uc544\ub2d9\ub2c8\ub2e4. \ubc30\uc5f4\uc5d0\uc11c \ud0c0\uc785\uc744 \ub9cc\ub4e4\uc5b4\ubd05\uc2dc\ub2e4."),(0,o.kt)("h3",{id:"inferred-array-types"},"Inferred Array Types"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},'const animals = ["cat", "dog", "mouse"];\n\n// const animals: string[]\n')),(0,o.kt)("p",null,"\uc704\uc5d0\uc11c ",(0,o.kt)("inlineCode",{parentName:"p"},"animals"),"\ub294 \uc2a4\ud2b8\ub9c1\uc758 \ubc30\uc5f4\ub85c \ucd08\uae30\ud654\ud588\uae30 \ub54c\ubb38\uc5d0 ",(0,o.kt)("inlineCode",{parentName:"p"},"string[]")," \ud0c0\uc785\uc73c\ub85c \ucd94\ub860\ub418\uc5c8\uc2b5\ub2c8\ub2e4. \ub9cc\uc57d ",(0,o.kt)("inlineCode",{parentName:"p"},'const animals = ["cat", "dog", 5];')," \ub77c\uace0 \ucd08\uae30\ud654 \ud588\ub2e4\uba74 ",(0,o.kt)("inlineCode",{parentName:"p"},"const animals: (string | number)[]")," \ud0c0\uc785\uc73c\ub85c \ucd94\ub860\ub418\uc5c8\uaca0\uc8e0."),(0,o.kt)("h3",{id:"const-assertion"},"Const Assertion"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"string[]")," \ud0c0\uc785\uc774 \ub418\ub294 \uac83\uc744 \uac15\uc694\ud558\uc9c0 \uc54a\uae30 \uc704\ud574\uc11c \ub2e4\uc74c\uacfc \uac19\uc740 \uc791\uc5c5\uc744 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},'const animals = ["cat", "dog", "mouse"] as ["cat", "dog", "mouse"];\n\n// const animals: [\'cat\', \'dog\', \'mouse\']\n')),(0,o.kt)("p",null,"\uc5ec\uae30\uc11c \uc911\ubcf5\uc744 \uc904\uc774\uae30 \uc704\ud574 TypeScript 3.4\uc5d0 \ub3c4\uc785\ub41c ",(0,o.kt)("a",{parentName:"p",href:"https://www.typescriptlang.org/docs/handbook/release-notes/typescript-3-4.html#const-assertions"},(0,o.kt)("inlineCode",{parentName:"a"},"const assertions")),"\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},'const animals = ["cat", "dog", "mouse"] as ["cat", "dog", "mouse"];\n\n// const animals: readonly[\'cat\', \'dog\', \'mouse\']\n')),(0,o.kt)("h3",{id:"getting-a-type-from-our-array"},"Getting a type from our array"),(0,o.kt)("p",null,"\uc774\uc81c ",(0,o.kt)("inlineCode",{parentName:"p"},"typeof"),"\ub97c \ud1b5\ud574 ",(0,o.kt)("inlineCode",{parentName:"p"},"aniamls"),"\uc758 \ud0c0\uc785\uc744 \uc5bb\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"const animals = [\"cat\", \"dog\", \"mouse\"] as const;\ntype Animal = typeof animals[number];\n\n// type Animal = 'cat' | 'dog' | 'mouse'\n")),(0,o.kt)("h3",{id:"array-of-objects"},"Array of Objects"),(0,o.kt)("p",null,"\uc778\ub371\uc2a4 \uc2dc\uadf8\ub2c8\ucc98\uc640 \ud504\ub85c\ud37c\ud2f0 \ud0a4\ub97c \uc81c\uacf5\ud558\uc5ec \ub2e4\uc74c\uacfc \uac19\uc774 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},'const animals = [\n  { species: "cat", name: "Fluffy" },\n  { species: "dog", name: "Fido" },\n  { species: "mouse", name: "Trevor" },\n] as const;\n\ntype Animal = typeof animals[number]["name"];\n\n/// type Animal = "Fluffy" | "Fido" | "Trevor"\n')),(0,o.kt)("h3",{id:"\uacb0\ub860"},"\uacb0\ub860"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"const assertions"),"\uc744 \uc774\uc6a9\ud558\uba74"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"\ub9ac\ud130\ub7f4 \ud0c0\uc785\uc740 \ub113\uac8c \ucd94\ub860\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. (\uc608\uc2dc. ",(0,o.kt)("inlineCode",{parentName:"li"},'"hello"')," \uac00 ",(0,o.kt)("inlineCode",{parentName:"li"},"string"),"\uc774 \ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.)"),(0,o.kt)("li",{parentName:"ol"},"\uac1d\uccb4 \ub9ac\ud130\ub7f4\uc740 ",(0,o.kt)("em",{parentName:"li"},"readonly")," \ud504\ub85c\ud37c\ud2f0\ub97c \uac00\uc9d1\ub2c8\ub2e4."),(0,o.kt)("li",{parentName:"ol"},"\ubc30\uc5f4 \ub9ac\ud130\ub7f4\uc740 ",(0,o.kt)("em",{parentName:"li"},"readonly")," \ud29c\ud50c\uc774 \ub429\ub2c8\ub2e4.")),(0,o.kt)("h3",{id:"\ucc38\uace0"},"\ucc38\uace0"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://steveholgado.com/typescript-types-from-arrays/"},"types from array")),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://www.bscotch.net/post/typescript-as-const"},"typescript as const")),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://www.typescriptlang.org/docs/handbook/release-notes/typescript-3-4.html#const-assertions"},"const assertion")))}y.isMDXComponent=!0}}]);